# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
---
# Nodes with values to reuse in the pipeline.
common_params:
  env: &xcode_image
    IMAGE_ID: xcode-15.2
  plugins:
    - &ci_toolkit
      automattic/a8c-ci-toolkit#2.18.2: ~
    - &docker_plugin
      docker#v5.8.0:
        image: &ruby_version "public.ecr.aws/docker/library/ruby:3.2.2"
        propagate-environment: true
        environment:
          - "RUBYGEMS_API_KEY"
    - &docker_plugin_with_danger_token
      docker#v5.8.0:
        image: *ruby_version
        propagate-environment: true
        environment:
          - "DANGER_GITHUB_API_TOKEN"


steps:
  #################
  # Build and Test
  #################
  - group: üß™ Build and Test"
    key: test
    steps:
      - label: "üß™ Build and Test using Ruby {{ matrix.ruby }}"
        command: |
          echo "--- :ruby: Using ruby {{ matrix.ruby }}"
          export RBENV_VERSION={{ matrix.ruby }}
          ruby --version

          echo "--- :package: Installing homebrew packages"
          # We only need this for tasks running on a Mac
          brew install pkg-config git-lfs libxml2 imagemagick@6

          echo "--- :git: Setting up git-lfs"
          git-lfs install

          echo "--- :rubygems: Setting up Gems"
          install_gems

          echo "--- :rspec: Run Rspec"
          bundle exec rspec --profile 10 --format progress
        env: *xcode_image
        plugins: [*ci_toolkit]
        agents:
          queue: "mac"
        matrix:
          setup:
            ruby:
              - 3.2.2

  #################
  # Lint
  #################
  - label: "üßπ Lint (Rubocop)"
    key: rubocop
    command: |
      bundle install
      echo "--- :rubocop: Run Rubocop"
      bundle exec rubocop
    plugins: [*docker_plugin]
    agents:
      queue: "default"

  #################
  # Danger
  #################
  - label: "‚õîÔ∏è Danger"
    key: danger
    command: |
      bundle install
      echo "--- :rubocop: Run Danger"
      bundle exec danger
    plugins: [*docker_plugin_with_danger_token]
    agents:
      queue: "default"

  #################
  # Push to RubyGems
  #################
  - label: ":rubygems: Publish to RubyGems"
    key: "gem-push"
    if: build.tag != null
    depends_on:
     - test
     - rubocop
     - danger
    # Note: We intentionally call a separate `.sh` script here (as opposed to having all the
    # commands written inline) to avoid leaking a key used in the process in clear in the
    # BUILDKITE_COMMAND environment variable.
    command: .buildkite/gem-push.sh
    plugins: [*docker_plugin]
    agents:
      queue: "default"
